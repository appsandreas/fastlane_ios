default_platform(:ios)

platform :ios do
    desc "Match the iOS application"
    lane :profiles do
        app_store_connect_api_key(
            key_id: ENV["APPLE_KEY_ID"],
            issuer_id: ENV["APPLE_ISSUER_ID"],
            key_content: ENV["APPLE_KEY_CONTENT"],
            is_key_content_base64: true,
            in_house: false #boolean value if team is Enterprise or not
        )

        match_nuke(
            git_url: "git@github.com:appsandreas/fastlane_sert_ios.git",
            type: "appstore",
            skip_confirmation: true
        )
        
        match(
            git_url: "git@github.com:appsandreas/fastlane_sert_ios.git",
            type: "appstore",
            app_identifier: [
                "com.ziprar.unarchiver",
                "com.ziprar.unarchiver.ShareExtension"
            ]
        )
    end
    desc "Build and Release the iOS application"
    lane :build do
        setup_ci if ENV['CI']

        app_store_connect_api_key(
            key_id: ENV["APPLE_KEY_ID"],
            issuer_id: ENV["APPLE_ISSUER_ID"],
            key_content: ENV["APPLE_KEY_CONTENT"],
            is_key_content_base64: true,
            in_house: false #boolean value if team is Enterprise or not
        )

        match(
            git_url: "git@github.com:appsandreas/fastlane_sert_ios.git",
            type: "appstore",
            app_identifier: [
                "com.ziprar.unarchiver",
                "com.ziprar.unarchiver.ShareExtension"
            ]
        )

        current_version = get_version_number(target:"ZipExtractor")

        latest_build_number = latest_testflight_build_number(
            live: false
        )

        increment_build_number(
            build_number: (latest_build_number + 1),
        )

        gym(
            export_method: "app-store",
            xcargs: "-allowProvisioningUpdates"
        )

        upload_to_app_store(
            skip_metadata: true, # Пропустить загрузку метаданных
            skip_screenshots: true, # Пропустить загрузку скриншотов
            force: true, # Пропустить подтверждение перед загрузкой
            precheck_include_in_app_purchases: false
        )
    end
    desc "Build with Cocoapods and Release the iOS application"
    lane :buildCocoapods do
        setup_ci if ENV['CI']

        app_store_connect_api_key(
            key_id: ENV["APPLE_KEY_ID"],
            issuer_id: ENV["APPLE_ISSUER_ID"],
            key_content: ENV["APPLE_KEY_CONTENT"],
            is_key_content_base64: true,
            in_house: false #boolean value if team is Enterprise or not
        )

        current_version = get_version_number

        latest_build_number = latest_testflight_build_number(
            live: false
        )

        increment_build_number(
            build_number: (latest_build_number + 1),
        )

        cocoapods

        gym(
            export_method: "app-store",
            xcargs: "-allowProvisioningUpdates"
        )

        upload_to_app_store(
            skip_metadata: true, # Пропустить загрузку метаданных
            skip_screenshots: true, # Пропустить загрузку скриншотов
            force: true, # Пропустить подтверждение перед загрузкой
            precheck_include_in_app_purchases: false
        )
    end
end
